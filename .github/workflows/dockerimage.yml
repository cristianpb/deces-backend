name: Docker image build CI

on: [push]

jobs:
  build:
    name: 🐳 Docker image build CI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: 🐋 Build the master docker image
        run: make backend-build-all
        env:
          NPM_VERBOSE: ""
      - name: 👷 Make deploy local
        run: make deploy-local
        env:
          FILES_TO_PROCESS: deces-2020-m01.txt.gz
          STORAGE_ACCESS_KEY: ${{ secrets.aws_access_key_id }}
          STORAGE_SECRET_KEY: ${{ secrets.aws_secret_access_key }}
      - name: 🚀 Push the docker image
        if: steps.extract_branch.outputs.branch == 'master' || steps.extract_branch.outputs.branch == 'dev'
        run: make docker-push GIT_BRANCH="$GIT_BRANCH"
        env:
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  bulk:
    name: Test bulk mode
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Build the dev docker image
        run: make backend-build-all
      - name: Make deploy local
        run: make config elasticsearch-storage-pull elasticsearch-restore elasticsearch docker-check up backup-dir-clean
        env:
          FILES_TO_PROCESS: deaths.txt.gz
          STORAGE_ACCESS_KEY: ${{ secrets.aws_access_key_id }}
          STORAGE_SECRET_KEY: ${{ secrets.aws_secret_access_key }}
      - name: Make bulk tests
        run: |
          curl -L https://github.com/matchID-project/examples/raw/master/data/clients_test.csv -o clients_test.csv
          head -n 100 clients_test.csv > backend/tests/clients_test.csv
          docker cp backend/tests/clients_test.csv deces-backend:/deces-backend/tests/clients_test.csv
          docker exec -i deces-backend ls /deces-backend/tests/clients_test.csv
          export msg=$(docker exec -i deces-backend curl  -X POST -H "Content-Type: multipart/form-data" -F "csv=@/deces-backend/tests/clients_test.csv" -F "sep=;" -F "firstName=Prenom" -F "lastName=Nom" -F "birthDate=Date" -F "chunkSize=20" http://localhost:8080/deces/api/v1/search/csv )
          echo "Result $msg"
          export jobId=$(echo $msg | grep -Po '(?<=id":")[0-9a-z]+' )
          echo "JobID $jobId"
          until docker exec -i deces-backend curl -s --fail -X GET "http://localhost:8080/deces/api/v1/search/csv/$jobId" | tee log.log | grep --invert-match progress > /dev/null ; do cat log.log ; sleep 5 ; done ;
          docker exec -i deces-backend curl -s --fail -X GET "http://localhost:8080/deces/api/v1/search/csv/$jobId" > results.csv
      - name: 📦 Upload results as job artifact
        uses: actions/upload-artifact@v1
        with:
          name: match-results
          path: results.csv
