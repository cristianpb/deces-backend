version: '3.4'

services:
  nginx:
    image: ${DOCKER_USERNAME}/deces-nginx-${EXEC_ENV}:${APP_VERSION}
    container_name: ${DC_PREFIX}-nginx-${EXEC_ENV}
    build:
      context: ${NGINX}
      target: ${EXEC_ENV}
      dockerfile: ${NGINX}/Dockerfile
      args:
        app_name: ${APP}
        app_ver: ${APP_VERSION}
    environment:
      - APP
      - ES_PROXY_PATH
      - ES_HOST
      - ES_INDEX
      - ES_PORT
      - BACKEND_PROXY_PATH
      - BACKEND_PORT
      - BACKEND_DEV_HOST
      - API_USER_LIMIT_RATE
      - API_USER_BURST
      - API_USER_SCOPE
      - API_GLOBAL_LIMIT_RATE
      - API_GLOBAL_BURST
    ports:
      - ${PORT}:80
    restart: always
  backend:
    image: ${DOCKER_USERNAME}/deces-backend-${EXEC_ENV}:${APP_VERSION}
    container_name: deces-backend-${EXEC_ENV}
    build:
      context: ${BACKEND}
      target: ${EXEC_ENV}
      dockerfile: Dockerfile
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        npm_registry: ${NPM_REGISTRY}
        MIRROR_DEBIAN: ${MIRROR_DEBIAN}
        app_path: /${APP}
        app_name: ${APP}
        app_ver: ${APP_VERSION}
        port: ${BACKEND_PORT}
        NPM_FIX: ${NPM_FIX}
        NPM_LATEST: ${NPM_LATEST}
        NPM_VERBOSE: ${NPM_VERBOSE}
    environment:
      - NODE_ENV=${EXEC_ENV}
      - BACKEND_PORT=${BACKEND_PORT}
      - APP=${APP}
      - APP_VERSION=${APP_VERSION}
      - BACKEND_PROXY_PATH=${BACKEND_PROXY_PATH}
      - ES_URL=${ES_HOST}:${ES_PORT}
      - ES_INDEX=${ES_INDEX}
    volumes:
      - ${BACKEND}/src:/${APP}/src/
      - ${BACKEND}/dist:/${APP}/dist/
      - ${BACKEND}/tests:/${APP}/tests/
      - /${APP}/node_modules

networks:
  default:
    external:
      name: ${DC_NETWORK}
